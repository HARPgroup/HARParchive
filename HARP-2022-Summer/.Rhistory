labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
library(R.utils)
library(hydrotools)
setwd("/Users/glenncampagna/Documents/HARPteam22/Data") # Set working directory to location of .csv file
pwater <- fread("forA51800_pwater.csv")
pwater$date <- as.Date(pwater$index, format = "%m/%d/%y")
pwater$week <- week(pwater$date)
pwater$month <- month(pwater$date)
pwater$year <- year(pwater$date)
monthlyAGWS <- aggregate(pwater$AGWS, by = list(pwater$month, pwater$year), FUN = "mean")
colnames(monthlyAGWS) <- c("month", "year", "AGWS")
convert_cfs_sqm = 645.3333333
pwater$AGWO_ <- pwater$AGWO*convert_cfs_sqm # AGWO_ has units of cfs/sq mi
dailyAGWO_ <- aggregate(pwater$AGWO_, by=list(pwater$date), FUN='mean')
colnames(dailyAGWO_) <- c('date','AGWO')
dailyAGWO_$month <- month(dailyAGWO_$date)
dailyAGWO_$year <- year(dailyAGWO_$date)
monthlyAGWO <- aggregate(dailyAGWO_$AGWO, by = list(dailyAGWO_$month, dailyAGWO_$year), FUN = "mean")
colnames(monthlyAGWO) <- c('month', 'year', 'AGWO')
monthlyAGWO$date <-  as.Date(paste(monthlyAGWO$Month, monthlyAGWO$Year, '15'), '%m %Y %d')
monthlySURO <- aggregate(pwater$SURO, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlySURO) <- c('month','year','SURO')
monthlySURO$SURO_ <- monthlySURO$SURO*convert_cfs_sqm # the SURO_ column is in units of cfs/sq mi
monthlyIFWO <- aggregate(pwater$IFWO, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlyIFWO) <- c('month','year','IFWO')
monthlyIFWO$IFWO_ <- monthlyIFWO$IFWO*convert_cfs_sqm # the IFWO_ column is in units of cfs/sq mi
monthlyAGWO$SURO <- monthlySURO$SURO_
monthlyAGWO$IFWO <- monthlyIFWO$IFWO_
pwater$sum <- pwater$AGWO+pwater$IFWO+pwater$SURO
pwater$sum_ <- pwater$sum*convert_cfs_sqm
monthlySum <- aggregate(pwater$sum_, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlySum) <- c('month','year','sum')
monthlySum$date <- monthlyAGWO$date
monthlyAGWO$sum <- monthlySum$sum # maybe not
dailySum <- aggregate(pwater$sum_, by = list(pwater$date), FUN = 'mean')
colnames(dailySum) <- c('date','sum')
dailyAGWO_$sum <- dailySum$sum
dailyAGWOz <- zoo(dailyAGWO_$AGWO, order.by = dailyAGWO_$date)
dailySumz <- zoo(dailyAGWO_$sum, order.by = dailyAGWO_$date)
sum_g2 <- data.frame(group2(dailySumz))
l90_Runit <- min(sum_g2$X90.Day.Min)
AGWO_g2 <- data.frame(group2(dailyAGWOz))
l90_agwo_Runit <- min(AGWO_g2$X90.Day.Min)
years <- seq(1984,2020,1)
plot1 <- plot(monthlyAGWS$AGWS, type ='l', ylab = 'AGWS (in)', xaxt = 'n', xlab = NA, col = 'blue')
axis(1, at = seq(6,438,12), labels = years)
title(main = 'Active groundwater storage', sub = 'Monthly average values are plotted')
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'))  +
geom_line(aes(y=SURO, col = 'red')) +
geom_line(aes(y=IFWO, col = 'dark green')) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'))  +
geom_line(aes(y=SURO, col = 'red')) +
geom_line(aes(y=IFWO, col = 'dark green')) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
plot2
View(monthlyAGWO)
monthlyAGWO$date <-  as.Date(paste(monthlyAGWO$Month, monthlyAGWO$Year, '15'), '%m %Y %d')
monthlyAGWO$date <-  as.Date(paste(monthlyAGWO$month, monthlyAGWO$year, '15'), '%m %Y %d')
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'))  +
geom_line(aes(y=SURO, col = 'red')) +
geom_line(aes(y=IFWO, col = 'dark green')) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
plot2
#IHA group 2 metrics
pwater$sum <- pwater$AGWO+pwater$IFWO+pwater$SURO
pwater$sum_ <- pwater$sum*convert_cfs_sqm
monthlySum <- aggregate(pwater$sum_, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlySum) <- c('month','year','sum')
monthlySum$date <- monthlyAGWO$date
monthlyAGWO$sum <- monthlySum$sum # maybe not needed?
dailySum <- aggregate(pwater$sum_, by = list(pwater$date), FUN = 'mean')
colnames(dailySum) <- c('date','sum')
dailyAGWO_$sum <- dailySum$sum
dailyAGWOz <- zoo(dailyAGWO_$AGWO, order.by = dailyAGWO_$date)
dailySumz <- zoo(dailyAGWO_$sum, order.by = dailyAGWO_$date)
sum_g2 <- data.frame(group2(dailySumz))
l90_Runit <- min(sum_g2$X90.Day.Min)
AGWO_g2 <- data.frame(group2(dailyAGWOz))
l90_agwo_Runit <- min(AGWO_g2$X90.Day.Min)
View(pwater)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(zoo)
library(IHA)
library(PearsonDS)
library(ggplot2)
library(dplyr)
library(lubridate)
library(stats)
setwd("/Users/glenncampagna/Documents/HARPteam22/Data") # Set working directory to location of .csv file
pwater <- fread("forA51800_pwater.csv")
pwater$date <- as.Date(pwater$index, format = "%m/%d/%y")
pwater$week <- week(pwater$date)
pwater$month <- month(pwater$date)
pwater$year <- year(pwater$date)
monthlyAGWS <- aggregate(pwater$AGWS, by = list(pwater$month, pwater$year), FUN = "mean")
colnames(monthlyAGWS) <- c("month", "year", "AGWS")
convert_cfs_sqm = 645.3333333
pwater$AGWO_ <- pwater$AGWO*convert_cfs_sqm # AGWO_ has units of cfs/sq mi
dailyAGWO_ <- aggregate(pwater$AGWO_, by=list(pwater$date), FUN='mean')
colnames(dailyAGWO_) <- c('date','AGWO')
dailyAGWO_$month <- month(dailyAGWO_$date)
dailyAGWO_$year <- year(dailyAGWO_$date)
monthlyAGWO <- aggregate(dailyAGWO_$AGWO, by = list(dailyAGWO_$month, dailyAGWO_$year), FUN = "mean")
colnames(monthlyAGWO) <- c('month', 'year', 'AGWO')
monthlyAGWO$date <-  as.Date(paste(monthlyAGWO$month, monthlyAGWO$year, '15'), '%m %Y %d')
monthlySURO <- aggregate(pwater$SURO, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlySURO) <- c('month','year','SURO')
monthlySURO$SURO_ <- monthlySURO$SURO*convert_cfs_sqm # the SURO_ column is in units of cfs/sq mi
monthlyIFWO <- aggregate(pwater$IFWO, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlyIFWO) <- c('month','year','IFWO')
monthlyIFWO$IFWO_ <- monthlyIFWO$IFWO*convert_cfs_sqm # the IFWO_ column is in units of cfs/sq mi
monthlyAGWO$SURO <- monthlySURO$SURO_
monthlyAGWO$IFWO <- monthlyIFWO$IFWO_
pwater$sum <- pwater$AGWO+pwater$IFWO+pwater$SURO
pwater$sum_ <- pwater$sum*convert_cfs_sqm
monthlySum <- aggregate(pwater$sum_, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlySum) <- c('month','year','sum')
monthlySum$date <- monthlyAGWO$date
monthlyAGWO$sum <- monthlySum$sum # maybe not needed?
dailySum <- aggregate(pwater$sum_, by = list(pwater$date), FUN = 'mean')
colnames(dailySum) <- c('date','sum')
dailyAGWO_$sum <- dailySum$sum
dailyAGWOz <- zoo(dailyAGWO_$AGWO, order.by = dailyAGWO_$date)
dailySumz <- zoo(dailyAGWO_$sum, order.by = dailyAGWO_$date)
sum_g2 <- data.frame(group2(dailySumz))
l90_Runit <- min(sum_g2$X90.Day.Min)
AGWO_g2 <- data.frame(group2(dailyAGWOz))
l90_agwo_Runit <- min(AGWO_g2$X90.Day.Min)
years <- seq(1984,2020,1)
plot1 <- plot(monthlyAGWS$AGWS, type ='l', ylab = 'AGWS (in)', xaxt = 'n', xlab = NA, col = 'blue')
axis(1, at = seq(6,438,12), labels = years)
title(main = 'Active groundwater storage', sub = 'Monthly average values are plotted')
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'))  +
geom_line(aes(y=SURO, col = 'red')) +
geom_line(aes(y=IFWO, col = 'dark green')) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'))  +
geom_line(aes(y=SURO, col = 'red')) +
geom_line(aes(y=IFWO, col = 'dark green')) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
plot2
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(zoo)
library(IHA)
library(PearsonDS)
library(ggplot2)
library(dplyr)
library(lubridate)
library(stats)
setwd("/Users/glenncampagna/Documents/HARPteam22/Data") # Set working directory to location of .csv file
pwater <- fread("forA51800_pwater.csv")
fid = H5Fopen(h5_file_path) # Opens the h5 file, fid is a h5 identifier
did = H5Dopen(fid, data_source_table) # Opens the data table of interest using the path provided
pwater <- H5Dread(did, bit64conversion = "double")
origin <- "1970-01-01"
pwater$index <- as.POSIXct((pwater$index)/10^9, origin = origin, tz = "UTC")
View(pwater)
pwater$date <- as.Date(pwater$index, format = "%m/%d/%y")
pwater$week <- week(pwater$date)
pwater$month <- month(pwater$date)
pwater$year <- year(pwater$date)
monthlyAGWS <- aggregate(pwater$AGWS, by = list(pwater$month, pwater$year), FUN = "mean")
colnames(monthlyAGWS) <- c("month", "year", "AGWS")
convert_cfs_sqm = 645.3333333
pwater$AGWO_ <- pwater$AGWO*convert_cfs_sqm # AGWO_ has units of cfs/sq mi
dailyAGWO_ <- aggregate(pwater$AGWO_, by=list(pwater$date), FUN='mean')
colnames(dailyAGWO_) <- c('date','AGWO')
dailyAGWO_$month <- month(dailyAGWO_$date)
dailyAGWO_$year <- year(dailyAGWO_$date)
monthlyAGWO <- aggregate(dailyAGWO_$AGWO, by = list(dailyAGWO_$month, dailyAGWO_$year), FUN = "mean")
colnames(monthlyAGWO) <- c('month', 'year', 'AGWO')
monthlyAGWO$date <-  as.Date(paste(monthlyAGWO$month, monthlyAGWO$year, '15'), '%m %Y %d')
monthlySURO <- aggregate(pwater$SURO, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlySURO) <- c('month','year','SURO')
monthlySURO$SURO_ <- monthlySURO$SURO*convert_cfs_sqm # the SURO_ column is in units of cfs/sq mi
monthlyIFWO <- aggregate(pwater$IFWO, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlyIFWO) <- c('month','year','IFWO')
monthlyIFWO$IFWO_ <- monthlyIFWO$IFWO*convert_cfs_sqm # the IFWO_ column is in units of cfs/sq mi
monthlyAGWO$SURO <- monthlySURO$SURO_
monthlyAGWO$IFWO <- monthlyIFWO$IFWO_
pwater$sum <- pwater$AGWO+pwater$IFWO+pwater$SURO
pwater$sum_ <- pwater$sum*convert_cfs_sqm
monthlySum <- aggregate(pwater$sum_, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlySum) <- c('month','year','sum')
monthlySum$date <- monthlyAGWO$date
monthlyAGWO$sum <- monthlySum$sum # maybe not needed?
dailySum <- aggregate(pwater$sum_, by = list(pwater$date), FUN = 'mean')
colnames(dailySum) <- c('date','sum')
dailyAGWO_$sum <- dailySum$sum
dailyAGWOz <- zoo(dailyAGWO_$AGWO, order.by = dailyAGWO_$date)
dailySumz <- zoo(dailyAGWO_$sum, order.by = dailyAGWO_$date)
sum_g2 <- data.frame(group2(dailySumz))
l90_Runit <- min(sum_g2$X90.Day.Min)
AGWO_g2 <- data.frame(group2(dailyAGWOz))
l90_agwo_Runit <- min(AGWO_g2$X90.Day.Min)
years <- seq(1984,2020,1)
plot1 <- plot(monthlyAGWS$AGWS, type ='l', ylab = 'AGWS (in)', xaxt = 'n', xlab = NA, col = 'blue')
axis(1, at = seq(6,438,12), labels = years)
title(main = 'Active groundwater storage', sub = 'Monthly average values are plotted')
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'))  +
geom_line(aes(y=SURO, col = 'red')) +
geom_line(aes(y=IFWO, col = 'dark green')) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'))  +
geom_line(aes(y=SURO, col = 'red')) +
geom_line(aes(y=IFWO, col = 'dark green')) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
library("hydrotools")
library('zoo')
library('lubridate')
basepath='/var/www/R';
source("/var/www/R/config.R")
# Set up our data source
ds <- RomDataSource$new(site, rest_uname = rest_uname)
ds$get_token(rest_pw)
lseg_name="A51800"
lseg_ftype="cbp532_landseg"
landseg<- RomFeature$new(
ds,
list(
hydrocode=lseg_name,
ftype=lseg_ftype,
bundle='landunit'
),
TRUE
)
model <- RomProperty$new(
ds,
list(
varkey="om_model_element",
propname=landseg$name,
featureid=landseg$hydroid,
entity_type="dh_feature",
propcode="cbp-5.3.2"
),
TRUE
)
lu <- RomProperty$new(
ds,
list(
varkey="om_hspf_landuse",
propname="for",
featureid=model$pid,
entity_type="dh_properties",
propcode="for"
),
TRUE
)
model_scenario <- RomProperty$new(
ds,
list(
varkey="om_scenario",
featureid=lu$pid,
entity_type="dh_properties",
propname="p532sova_2021",
propcode="p532sova_2021"
),
TRUE
)
model_scenario$save(TRUE)
plot2
#Graph 2 -- need to edit
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'), size = 0.5)  +
geom_line(aes(y=SURO, col = 'red'), size = 0.5) +
geom_line(aes(y=IFWO, col = 'dark green'), size = 0.5) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
plot2
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'), size = 0.25)  +
geom_line(aes(y=SURO, col = 'red'), size = 0.25) +
geom_line(aes(y=IFWO, col = 'dark green'), size = 0.25) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = c(.75,.85))
plot2
plot2 <- ggplot(monthlyAGWO, aes(date, AGWO)) + geom_line(aes(col = 'blue'), size = 0.25)  +
geom_line(aes(y=SURO, col = 'red'), size = 0.25) +
geom_line(aes(y=IFWO, col = 'dark green'), size = 0.25) +
labs (x = NULL, y = 'Flow (cfs/sq mi)') +
ggtitle('Elements of total outflow to the river segment ') +
scale_color_identity(name = NULL, breaks=c('red','dark green','blue'), labels = c('Runoff', 'Interflow', 'Baseflow'), guide = 'legend') +
theme(legend.position = 'bottom')
plot2
# establishing location on server for storing images
# save_directory <-  "/var/www/html/data/proj3/out"
save_directory <-  "/Users/glenncampagna/Documents/HARPteam22"
fname <- paste(
save_directory,paste0('fig.totalFlowOut', scenario_name, '.', '.png'), # building file name
sep = '/'
)
scenario_name = 'p532sova_2021'
fname <- paste(
save_directory,paste0('fig.totalFlowOut', scenario_name, '.', '.png'), # building file name
sep = '/'
)
basepath='/var/www/R';
source("/var/www/R/config.R")
save_url = omsite
furl <- paste(
save_url,paste0('fig.totalFlowOut',scenario_name, '.',  '.png'),
sep = '/'
)
furl
fname <- paste(
save_directory,paste0('fig.totalFlowOut.', scenario_name, '.', '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0('fig.totalFlowOut.',scenario_name, '.',  '.png'),
sep = '/'
)
png(fname)
years <- seq(1984,2020,1)
plot(monthlyAGWS$AGWS, type ='l', ylab = 'AGWS (in)', xaxt = 'n', xlab = NA, col = 'blue')
axis(1, at = seq(6,438,12), labels = years)
title(main = 'Active groundwater storage', sub = 'Monthly average values are plotted')
dev.off()
print(paste("Saved file: ", fname, "with URL", furl))
model_graph1 <- RomProperty$new(
ds, list(
varkey="dh_image_file",
featureid=model_scenario$pid,
entity_type='dh_properties',
propcode = furl,
propname = 'fig.totalFlowOut'
)
)
model_graph1$save(TRUE)
model_scenario$pid
model_scenario <- RomProperty$new(
ds,
list(
varkey="om_scenario",
featureid=lu$pid,
entity_type="dh_properties",
propname=scenario_name,
propcode=scenario_name
),
TRUE
)
model_scenario$save(TRUE)
model_scenario$pid
fname <- paste(
save_directory,paste0('fig.totalFlowOut.', scenario_name, '.', '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0('fig.totalFlowOut.',scenario_name, '.',  '.png'),
sep = '/'
)
png(fname)
years <- seq(1984,2020,1)
plot(monthlyAGWS$AGWS, type ='l', ylab = 'AGWS (in)', xaxt = 'n', xlab = NA, col = 'blue')
axis(1, at = seq(6,438,12), labels = years)
title(main = 'Active groundwater storage', sub = 'Monthly average values are plotted')
dev.off()
print(paste("Saved file: ", fname, "with URL", furl))
model_graph1 <- RomProperty$new(
ds, list(
varkey="dh_image_file",
featureid=model_scenario$pid,
entity_type='dh_properties',
propcode = furl,
propname = 'fig.totalFlowOut'
)
)
model_graph1$save(TRUE)
# Add code here to export graphs
save_url = omsite
furl <- paste(
save_url,paste0(save_directory,'fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
furl <- paste(
save_url,paste0(save_directory,'fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
# establishing location on server for storing images
# save_directory <-  "/var/www/html/data/proj3/out"
save_directory <-  "/p6/out/land/hsp2_2022/eos/"
furl <- paste(
save_url,paste0(save_directory,'fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
# establishing location on server for storing images
# save_directory <-  "/var/www/html/data/proj3/out"
save_directory <-  "/p6/out/land/hsp2_2022/eos"
furl <- paste(
save_url,paste0(save_directory,'fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
furl <- paste(
save_url,paste0(save_directory,'fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
# establishing location on server for storing images
# save_directory <-  "/var/www/html/data/proj3/out"
save_directory <-  "p6/out/land/hsp2_2022/eos"
furl <- paste(
save_url,paste0(save_directory,'fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
furl <- paste(
save_url,paste0(save_directory,'fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
furl <- paste(
save_url,paste0(save_directory,'fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
furl <- paste(
save_url,paste0(save_directory,'fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
furl <- paste(
save_url,paste0(save_directory,'/fig.AGWS.',scenario_name,  '.png'),
sep = '/'
)
landseg<- RomFeature$new(
ds,
list(
hydrocode=lseg_name,
ftype=lseg_ftype,
bundle='landunit'
),
TRUE
)
landuse <- 'for'
basepath='/var/www/R';
source("/var/www/R/config.R")
save_url = omsite
# For graph 1
fname <- paste(
save_directory,paste0('fig.AGWS.',land_segment_name,'.',landuse,'.', scenario_name, '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0('fig.AGWS.',land_segment_name,'.',landuse,'.',scenario_name,  '.png'),
sep = '/'
)
land_segment_name <- 'A51800'
save_url = omsite
# For graph 1
fname <- paste(
save_directory,paste0('fig.AGWS.',land_segment_name,'.',landuse,'.', scenario_name, '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0('fig.AGWS.',land_segment_name,'.',landuse,'.',scenario_name,  '.png'),
sep = '/'
)
scenario_name <- 'p532sova_2021'
scenario_name <- 'p532sova_2021'# need to remove before using on server
fname <- paste(
save_directory,paste0('fig.AGWS.',land_segment_name,'.',landuse,'.', scenario_name, '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0('fig.AGWS.',land_segment_name,'.',landuse,'.',scenario_name,  '.png'),
sep = '/'
)
fname
furl
# establishing location on server for storing images
# save_directory <-  "/var/www/html/data/proj3/out"
save_directory <-  "/var/www/html/data/proj3/out"
fname <- paste(
save_directory,paste0('fig.AGWS.',land_segment_name,'.',landuse,'.', scenario_name, '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0('fig.AGWS.',land_segment_name,'.',landuse,'.',scenario_name,  '.png'),
sep = '/'
)
fname
furl
# Add code here to export graphs
save_url = paste(omsite, '/data/proj3/out')
# Add code here to export graphs
save_url = paste(omsite,'/data/proj3/out')
# Add code here to export graphs
save_url = paste(omsite,'/data/proj3/out', sep ='')
