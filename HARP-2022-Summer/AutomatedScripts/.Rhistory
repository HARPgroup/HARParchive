),
TRUE
)
model_constant_Runit <- RomProperty$new(
ds, list(
varkey="om_class_Constant",
featureid=lu$pid,
entity_type='dh_properties',
propname = 'l90_Runit',
propvalue= l90_Runit
)
)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(zoo)
library(IHA)
library(PearsonDS)
library(ggplot2)
library(dplyr)
library(lubridate)
library(stats)
setwd("/Users/glenncampagna/Documents/HARPteam22/Data") # Set working directory to location of .csv file
pwater <- fread("forA51800_pwater.csv")
pwater <- fread(pwater_file_path)
pwater$date <- as.Date(pwater$index, format = "%m/%d/%y")
pwater$week <- week(pwater$date)
pwater$month <- month(pwater$date)
pwater$year <- year(pwater$date)
monthlyAGWS <- aggregate(pwater$AGWS, by = list(pwater$month, pwater$year), FUN = "mean")
colnames(monthlyAGWS) <- c("month", "year", "AGWS")
#Creating column in pwater for baseflow in units of cfs/sq mi
convert_cfs_sqm = 645.3333333
pwater$AGWO_ <- pwater$AGWO*convert_cfs_sqm # AGWO_ has units of cfs/sq mi
dailyAGWO_ <- aggregate(pwater$AGWO_, by=list(pwater$date), FUN='mean')
colnames(dailyAGWO_) <- c('date','AGWO')
dailyAGWO_$month <- month(dailyAGWO_$date)
dailyAGWO_$year <- year(dailyAGWO_$date)
monthlyAGWO <- aggregate(dailyAGWO_$AGWO, by = list(dailyAGWO_$month, dailyAGWO_$year), FUN = "mean")
colnames(monthlyAGWO) <- c('month', 'year', 'AGWO')
monthlyAGWO$date <-  as.Date(paste(monthlyAGWO$month, monthlyAGWO$year, '15'), '%m %Y %d')
# For graph 2
monthlySURO <- aggregate(pwater$SURO, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlySURO) <- c('month','year','SURO')
monthlySURO$SURO_ <- monthlySURO$SURO*convert_cfs_sqm # the SURO_ column is in units of cfs/sq mi
monthlyIFWO <- aggregate(pwater$IFWO, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlyIFWO) <- c('month','year','IFWO')
monthlyIFWO$IFWO_ <- monthlyIFWO$IFWO*convert_cfs_sqm # the IFWO_ column is in units of cfs/sq mi
monthlyAGWO$SURO <- monthlySURO$SURO_
monthlyAGWO$IFWO <- monthlyIFWO$IFWO_
#IHA group 2 metrics
pwater$sum <- pwater$AGWO+pwater$IFWO+pwater$SURO
pwater$sum_ <- pwater$sum*convert_cfs_sqm
monthlySum <- aggregate(pwater$sum_, by = list(pwater$month, pwater$year), FUN = 'mean')
colnames(monthlySum) <- c('month','year','sum')
monthlySum$date <- monthlyAGWO$date
monthlyAGWO$sum <- monthlySum$sum # maybe not needed?
dailySum <- aggregate(pwater$sum_, by = list(pwater$date), FUN = 'mean')
colnames(dailySum) <- c('date','sum')
dailyAGWO_$sum <- dailySum$sum
dailyAGWOz <- zoo(dailyAGWO_$AGWO, order.by = dailyAGWO_$date)
dailySumz <- zoo(dailyAGWO_$sum, order.by = dailyAGWO_$date)
sum_g2 <- data.frame(group2(dailySumz))
l90_Runit <- min(sum_g2$X90.Day.Min)
AGWO_g2 <- data.frame(group2(dailyAGWOz))
l90_agwo_Runit <- min(AGWO_g2$X90.Day.Min)
model_constant_Runit <- RomProperty$new(
ds, list(
varkey="om_class_Constant",
featureid=lu$pid,
entity_type='dh_properties',
propname = 'l90_Runit',
propvalue= l90_Runit
)
)
lu$pid
lu$pk_name
# save_directory <-  "/var/www/html/data/proj3/out"
landuse <- 'for' # needs to be commented when running on the server
lu <- RomProperty$new(
ds,
list(
varkey="om_hspf_landuse",
propname=landuse,
featureid=model_scenario$pid,
entity_type="dh_properties",
propcode=landuse
),
TRUE
)
lu$pid
model_scenario$pid
image_directory_path <- '/opt/model/p53/p532c-sova/output/hspf/land/out/for/hsp2_2022/images' # needs to be commented when running on the server
#image_directory_path <- '/opt/model/p53/p532c-sova/output/hspf/land/out/for/hsp2_2022/images' # needs to be commented when running on the server
save_directory <-  image_directory_path
image_path_split <- strsplit(image_directory_path, split = '/')
View(image_path_split)
save_url = paste(omsite,image_path_split[[1]][4],image_path_split[[1]][5],image_path_split[[1]][6],image_path_split[[1]][7],image_path_split[[1]][8],sep ='/')
omsite = "http://deq1.bse.vt.edu:81"
save_url = paste(omsite,image_path_split[[1]][4],image_path_split[[1]][5],image_path_split[[1]][6],image_path_split[[1]][7],image_path_split[[1]][8],sep ='/')
save_url
fname <- paste(
save_directory,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'),
sep = '/'
)
# save_directory <-  "/var/www/html/data/proj3/out"
landuse <- 'for' # needs to be commented when running on the server
fname <- paste(
save_directory,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'),
sep = '/'
)
# save_directory <-  "/var/www/html/data/proj3/out"
#landuse <- 'for' # needs to be commented when running on the server
land_segment_name <- 'A51019' # need to remove before using on server
fname <- paste(
save_directory,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'),
sep = '/'
)
fname
furl
path_list_m2 <- image_path_split[-c(1,2)]
path_list_m2 <- image_path_split[[1]][-c(1,2)]
path_list_m2 <- image_path_split[[1]][-c(1,2)]
path_list_m2 <- image_path_split[[1]][-c(1,2,3)]
path_list_m2 <- as.list(image_path_split[[1]][-c(1,2,3)])
View(path_list_m2)
image_directory_path <- '/opt/model/p53/p532c-sova/output/hspf/land/out/for/hsp2_2022/images' # needs to be commented when running on the server
image_path_split <- strsplit(image_directory_path, split = '/')
path_list_m2 <- as.list(image_path_split[[1]][-c(1,2)])
View(path_list_m2)
path_list_m2 <- as.list(image_path_split[[1]][-c(1,2,3)])
View(path_list_m2)
# Add code here to export graphs
save_url = paste(omsite,)
# Add code here to export graphs
save_url = paste(omsite)
# Add code here to export graphs
save_url = paste(omsite, path_list_m2)
# Add code here to export graphs
save_url = paste(omsite, paste(path_list_m2, sep = '/'))
# Add code here to export graphs
save_url = paste(omsite, paste(path_list_m2, sep = '/'))
save_url = paste(omsite, paste0(path_list_m2, sep = '/'))
save_url
# Add code here to export graphs
save_url = paste(omsite, as.character(path_list_m2, sep = '/'))
path_string_m2 <- paste(path_list_m2, collapse = "/")
# Add code here to export graphs
save_url = paste(omsite, '/', path_string_m2)
save_url
# Add code here to export graphs
save_url = paste(omsite, '/', path_string_m2, sep ='')
# Add code here to export graphs
save_url = paste(omsite, '/', path_string_m2, sep ='')
save_url
fname <- paste(
image_directory_path,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'),
sep = '/'
)
fname
furl
fname2 <- paste(
image_directory_path,paste0(landuse,'',land_segment_name,'.', 'fig.totalOut', '.png'), # building file name
sep = '/'
)
furl2 <- paste(
save_url,paste0(landuse,'',land_segment_name,'.', 'fig.totalOut', '.png'),
sep = '/'
)
furl
furl2
image_directory_path <- '/opt/model/p53/p532c-sova/output/hspf/land/out/for/hsp2_2022/images' # needs to be commented when running on the server
image_path_split <- strsplit(image_directory_path, split = '/')
path_list_m2 <- as.list(image_path_split[[1]][-c(1,2,3)])
path_string_m2 <- paste(path_list_m2, collapse = "/")
# Add code here to export graphs
save_url = paste(omsite, '/', path_string_m2, sep ='')
save_url
fname <- paste(
image_directory_path,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'),
sep = '/'
)
fname
furl
fname2 <- paste(
image_directory_path,paste0(landuse,'',land_segment_name,'.', 'fig.totalOut', '.png'), # building file name
sep = '/'
)
furl2 <- paste(
save_url,paste0(landuse,'',land_segment_name,'.', 'fig.totalOut', '.png'),
sep = '/'
)
nem 2
fname2
furl2
# Add code here to export graphs
save_url = paste(omsite, '/', path_string_m2, sep ='')
save_url
library(hydrotools)
#message(R_TempDir)
basepath='/var/www/R';
source("/var/www/R/config.R") # will need file in same folder/directory
# establishing location on server for storing images
omsite = "http://deq1.bse.vt.edu:81"
# Set up our data source
ds <- RomDataSource$new(site, rest_uname = rest_uname)
ds$get_token(rest_pw)
View(ds)
image_directory_path <- '/media/model/p532/out/land/hsp2_2022/images' # needs to be commented when running on the server
# establishing location on server for storing images
omsite = "http://deq1.bse.vt.edu:81"
landuse <- 'for' # needs to be commented when running on the server
land_segment_name <- 'A51019' # need to remove before using on server
scenario_name <- 'p532sova_2021'# need to remove before using on server
#landuse <- 'for' # needs to be commented when running on the server
#land_segment_name <- 'A51019' # need to comment before using on server
scenario_name <- 'hsp2_2022'# need to comment before using on server
image_path_split <- strsplit(image_directory_path, split = '/')
path_list_m2 <- as.list(image_path_split[[1]][-c(1,2,3)])
path_string_m2 <- paste(path_list_m2, collapse = "/")
View(path_list_m2)
# Add code here to export graphs
save_url = paste(omsite, '/', path_string_m2, sep ='')
save_url
fname <- paste(
image_directory_path,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'),
sep = '/'
)
fname
furl
library(data.table)
library(lubridate)
library(zoo)
library(plyr)
library(caTools)
library(RColorBrewer)
library(IHA)
library(PearsonDS)
library(ggplot2)
library(dplyr)
library(stats)
library(R.utils)
library(hydrotools)
basepath='/var/www/R';
source("/var/www/R/config.R") # will need file in same folder/directory
# establishing location on server for storing images
omsite = "http://deq1.bse.vt.edu:81"
image_directory_path <- '/media/model/p532/out/land/hsp2_2022/images' # needs to be commented when running on the server
image_path_split <- strsplit(image_directory_path, split = '/')
path_list_m2 <- as.list(image_path_split[[1]][-c(1,2,3)])
path_string_m2 <- paste(path_list_m2, collapse = "/")
save_url = paste(omsite, '/', path_string_m2, sep ='')
# For graph 1
fname <- paste(
image_directory_path,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'), # building file name
sep = '/'
)
furl <- paste(
save_url,paste0(landuse,'',land_segment_name,'.', 'fig.AGWS', '.png'),
sep = '/'
)
save_url
fname
furl
png(fname) #fname is a character string with file name
years <- seq(1984,2020,1)
plot(monthlyAGWS$AGWS, type ='l', ylab = 'AGWS (in)', xaxt = 'n', xlab = NA, col = 'blue')
axis(1, at = seq(6,438,12), labels = years)
title(main = 'Active groundwater storage', sub = 'Monthly average values are plotted')
dev.off()
print(paste("Saved file: ", fname, "with URL", furl))
model_graph1 <- RomProperty$new(
ds, list(
varkey="dh_image_file",
featureid=lu$pid,
entity_type='dh_properties',
propcode = furl,
propname = 'fig.AGWS'
),
TRUE
)
model_graph1$save(TRUE)
ds <- RomDataSource$new(site, rest_uname = rest_uname)
ds$get_token(rest_pw)
png(fname) #fname is a character string with file name
years <- seq(1984,2020,1)
plot(monthlyAGWS$AGWS, type ='l', ylab = 'AGWS (in)', xaxt = 'n', xlab = NA, col = 'blue')
axis(1, at = seq(6,438,12), labels = years)
title(main = 'Active groundwater storage', sub = 'Monthly average values are plotted')
dev.off()
print(paste("Saved file: ", fname, "with URL", furl))
model_graph1 <- RomProperty$new(
ds, list(
varkey="dh_image_file",
featureid=lu$pid,
entity_type='dh_properties',
propcode = furl,
propname = 'fig.AGWS'
),
TRUE
)
model_graph1$save(TRUE)
save_url
fname
RomDataSource
library(hydrotools)
feature_name <- 68308 #comment out later
ftype <- vahydro1_riverseg
feature_name <- "68308" #comment out later
ftype <- "vahydro1_riverseg"
basepath='/var/www/R';
source("/var/www/R/config.R") #will need file in same folder/directory
ds <- RomDataSource$new(site, rest_uname = rest_uname)
ds$get_token(rest_pw)
basepath='/var/www/R';
source("/var/www/R/config.R") #will need file in same folder/directory
omsite = "http://deq1.bse.vt.edu:81" #establishing location on server for storage
View(getFeature)
View(om_get_prop)
View(rest_token)
View(vahydro_prop_matrix)
feature_name <- "68308" #comment out later
ftype <- "vahydro1_riverseg"
riverseg<- RomFeature$new(
ds,
list(
hydrocode=rseg_name,
ftype=rseg_ftype,
bundle='riverunit'
),
TRUE
)
library("hydrotools")
library('zoo')
library('lubridate')
feature_name <- "68308" #comment out later
ftype <- "vahydro1_riverseg"
riverseg<- RomFeature$new(
ds,
list(
hydrocode=rseg_name,
ftype=rseg_ftype,
bundle='riverunit'
),
TRUE
)
# Set up our data source
ds <- RomDataSource$new(site, rest_uname = rest_uname)
riverseg<- RomFeature$new(
ds,
list(
hydrocode=rseg_name,
ftype=rseg_ftype,
bundle='riverunit'
),
TRUE
)
hydroid <- "68308" #comment out later
riverseg <- "JL2_6440_6441_moormans_sugar_hollow"
hydrocode= paste("vahydrosw_wshed_",riverseg)
hydrocode
hydrocode= paste("vahydrosw_wshed",riverseg,collapse = "_"),
hydrocode= paste("vahydrosw_wshed",riverseg,collapse = "_")
hydrocode
hydrocode= paste("vahydrosw_wshed",riverseg,sep = "_")
hydrocode
rseg<- RomFeature$new(
ds,
list(
hydrocode= paste("vahydrosw_wshed",riverseg,sep = "_"),
ftype=vahydro,
bundle='watershed'
),
TRUE
)
riverseg<- RomFeature$new(
ds,
list(
hydrocode= paste("vahydrosw_wshed",riverseg,sep = "_"),
ftype=vahydro,
bundle='watershed'
),
TRUE
)
riverseg
rseg<- RomFeature$new(
ds,
list(
hydrocode= paste("vahydrosw_wshed",riverseg,sep = "_"),
ftype='vahydro',
bundle='watershed'
),
TRUE
)
model <- RomProperty$new(
ds,
list(
varkey="om_water_model_node", #got here http://deq1.bse.vt.edu:81/d.dh/om-model-info/68308/dh_feature
propname=rseg$name,
featureid=rseg$hydroid,
entity_type="dh_feature",
propcode="vahydro-1.0"        #also got this from that^
),
TRUE
)
View(model)
library("hydrotools")
library('zoo')
library('lubridate')
basepath='/var/www/R';
source("/var/www/R/config.R")
# Set up our data source
ds <- RomDataSource$new(site, rest_uname = rest_uname)
ds$get_token(rest_pw)
# TBD: get inputs from the comand line
#  For now we just load some samples
lseg_name="A51800"
lseg_ftype="cbp532_landseg"
landseg<- RomFeature$new(
ds,
list(
hydrocode=lseg_name,
ftype=lseg_ftype,
bundle='landunit'
),
TRUE
)
model <- RomProperty$new(
ds,
list(
varkey="om_model_element",
propname=landseg$name,
featureid=landseg$hydroid,
entity_type="dh_feature",
propcode="cbp-5.3.2"
),
TRUE
)
View(landseg)
rseg<- RomFeature$new(
ds,
list(
hydrocode= paste("vahydrosw_wshed",riverseg,sep = "_"),
ftype='vahydro',
bundle='watershed'
),
TRUE
)
basepath='/var/www/R';
source("/var/www/R/config.R") #will need file in same folder/directory
library("hydrotools")
library('zoo')
library('lubridate')
hydroid <- "68308" #comment out later
riverseg <- "JL2_6440_6441_moormans_sugar_hollow"
#ftype <- "vahydro1_riverseg"
# idk what else yet...
# Set up our data source
ds <- RomDataSource$new(site, rest_uname = rest_uname)
ds$get_token(rest_pw)
rseg<- RomFeature$new(
ds,
list(
hydrocode= paste("vahydrosw_wshed",riverseg,sep = "_"),
ftype='vahydro',
bundle='watershed'
),
TRUE
)
model <- RomProperty$new(
ds,
list(
varkey="om_water_model_node", #got here http://deq1.bse.vt.edu:81/d.dh/om-model-info/68308/dh_feature
propname=rseg$name,
featureid=rseg$hydroid,
entity_type="dh_feature",
propcode="vahydro-1.0"        #also got this from that^
),
TRUE
)
local_channel<- RomProperty$new(
ds, list(
varkey="om_USGSChannelGeomObject_sub",    #found here http://deq1.bse.vt.edu:81/d.dh/admin/content/dh_properties/manage/4712896/dh_properties?items_per_page=40&page=1
featureid=model$pid, #model is the section above
entity_type='dh_properties',
propname = 'local_channel'
),
TRUE
)
